{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app-compiled.js","sourcesContent":["var express = require('express');\nvar path = require('path');\nvar http = require('http');\nvar config = require('./config');\nvar log = require('./libs/log')(module);\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\n\nvar io = require('socket.io')(http);\n\nvar app = express(); //создаем объект сервера express со всеми нужными параметрами\napp.use(bodyParser.json()); //парсит json, form и после все свойства будут доступны в req.body.свойство\n\napp.engine('ejs', require('ejs-locals')); //добавляет возможности layout, partial, block\n\napp.set('views', path.join(__dirname, 'views'));  //подключаем пути к шаблонам\napp.set('view engine', 'ejs');  //подключаем шаблонизатор ejs\n\napp.use(favicon(path.join(__dirname, 'favicon', 'favicon.ico')));\napp.use(logger('dev')); //еще один логер\n\napp.use(cookieParser()); //разбирает req.headers и делает req.cookies\n\nvar mongoose = require('./libs/mongoose');\n\nvar session = require('express-session');\nvar MongoStore = require('connect-mongo')(session);\n\n/* Работает с сессиями. Создает уникальный идентификатор для сессии, по кот будут восстановлены данные\n *  этой сессии.\n * */\napp.use(session({\n      secret: config.get(\"session:secret\"),        //исп. для создания цифровой подписи.не передается посетителю\n      name: config.get(\"session:key\"),\n      cookie: config.get(\"session:cookie\"),\n      saveUninitialized: false,\n      resave: false,\n      store: new MongoStore({mongooseConnection: mongoose.connection})\n    })\n);\n\nvar routes = require('./routes/index')(app);  //объект сервера передается во все контроллеры(все подключенное выше доступно везде)\n\n/*\n * Страница считает сколько раз была просмотрена тек. пользователем\n * и записывает данные в сессиию\n */\napp.get('/session', function(req, res, next){\n  req.session.numberOfVisits = req.session.numberOfVisits + 1 || 1;\n  res.send(\"\" + req.session.numberOfVisits);\n});\n\napp.get('/xmlHttp', function(req, res, next){\n  console.log(req.query);\n  res.send(\"Получено\");\n});\n\n\nvar User = require(\"./models/user\").User;\n\napp.get('/user/:id', function(req, res, next){\n  User.findById(req.params.id, function(err, user){\n    if(err) return next(err);\n    res.json(user);\n  })\n})\n\n\napp.get('/users', function(req, res, next){\n  User.find({}, function(err, users){\n    if(err) next(err);\n    res.render('users', {hi: \"Hello\" ,users: users});\n  })\n});\n\n\napp.get('/remove', function(req, res, next){\n  User.remove({}, function(err, req, res){\n    if(err) throw err;\n  });\n  res.end(\"Удалено\");\n});\n\napp.get('/add', function(req, res, next){\n  var user = new User();\n  console.log(req.query.name);\n  user.userName = \"Alex\";\n  user.userPassword = \"123\";\n  user.save(function(err, user, affected){\n    if(err) next(err);\n  });\n  res.end(\"Добавлено\");\n});\n\n/*\n Смотрит, если никакие из вышеперечисленных Middleware-обработчиков не сработали, то\n переходит в папку public и отдает нужный файл\n */\napp.use(express.static(path.join(__dirname, 'public')));\n\nvar server = http.createServer(app)\nserver.listen(config.get('port'), function(){\n    log.info('Express app is listening on ' + config.get('port'));\n});\n\nvar io = require('socket.io').listen(server);\n\nio.on('connection', function(socket){\n    socket.on('chat start', function(msg){\n        console.log(\"Received message: \" + msg);\n        io.emit('chat end', msg);\n    });\n});\n\n\napp.use(function(err, req, res, next){\n  if(app.get('env') == 'development'){\n    res.status(500).send(\"<h2>500. Server Error</h2></br>\" + err.toString());\n    console.log(err);\n  }else next();\n});\n\napp.use(function(req, res, next){ //замыкающий обработчик\n  res.status(404).send(\"Page not found\");\n});\n\nmodule.exports = app;\n"]}