{"version":3,"sources":["Receiver.js"],"names":[],"mappings":";;;;;;;;AAMA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,UAAU;IAC/C,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC;IACpC,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC;IACpC,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,UAAU;IAC/C,iBAAiB,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;;;;;AAMvD,SAAS,QAAQ,CAAE,UAAU,EAAC,UAAU,EAAE;AACxC,MAAI,IAAI,YAAY,QAAQ,KAAK,KAAK,EAAE;AACtC,UAAM,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAC;GACzD;AACD,MAAG,OAAO,UAAU,KAAG,QAAQ,EAAC;AAC9B,cAAU,GAAC,UAAU,CAAC;AACtB,cAAU,GAAC,EAAE,CAAC;GACf;;;AAID,MAAI,sBAAsB,GAAG,CAAC,CAAC,CAAC;AAChC,MAAI,CAAC,oBAAoB,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,UAAS,EAAE,EAAE,MAAM,EAAE;AACpE,WAAO,EAAE,CAAC,IAAI,GAAG,MAAM,CAAC;GACzB,EAAE,UAAS,EAAE,EAAE;AACd,WAAO,sBAAsB,GAAG,sBAAsB,IAAI,CAAC,GACzD,IAAI,CAAC,IAAI,CAAC,CAAC,sBAAsB,GAAG,EAAE,CAAC,IAAI,CAAA,GAAI,CAAC,CAAC,GACjD,EAAE,CAAC,IAAI,CAAC;GACX,CAAC,CAAC;;;AAGH,MAAI,wBAAwB,GAAG,CAAC,CAAC,CAAC;AAClC,MAAI,CAAC,sBAAsB,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,UAAS,EAAE,EAAE,MAAM,EAAE;AACtE,WAAO,EAAE,CAAC,IAAI,GAAG,MAAM,CAAC;GACzB,EAAE,UAAS,EAAE,EAAE;AACd,WAAO,wBAAwB,GAAG,wBAAwB,IAAI,CAAC,GAC7D,IAAI,CAAC,IAAI,CAAC,CAAC,wBAAwB,GAAG,EAAE,CAAC,IAAI,CAAA,GAAI,CAAC,CAAC,GACnD,EAAE,CAAC,IAAI,CAAC;GACX,CAAC,CAAC;AACH,MAAI,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;AACnC,MAAI,CAAC,UAAU,GAAG,UAAU,IAAI,CAAC,CAAC;AAClC,MAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;AAC9B,MAAI,CAAC,KAAK,GAAG;AACX,6BAAyB,EAAE,IAAI;AAC/B,gBAAY,EAAE,KAAK;AACnB,UAAM,EAAE,KAAK;AACb,UAAM,EAAE,CAAC;AACT,uBAAmB,EAAE,KAAK;GAC3B,CAAC;AACF,MAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,MAAI,CAAC,YAAY,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;AACnC,MAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACtB,MAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,MAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,MAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AACzB,MAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;AAC9B,MAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAC1B,MAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AACzC,MAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAClB,MAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;AAExB,MAAI,CAAC,OAAO,GAAG,YAAW,EAAE,CAAC;AAC7B,MAAI,CAAC,MAAM,GAAG,YAAW,EAAE,CAAC;AAC5B,MAAI,CAAC,QAAQ,GAAG,YAAW,EAAE,CAAC;AAC9B,MAAI,CAAC,OAAO,GAAG,YAAW,EAAE,CAAC;AAC7B,MAAI,CAAC,MAAM,GAAG,YAAW,EAAE,CAAC;AAC5B,MAAI,CAAC,MAAM,GAAG,YAAW,EAAE,CAAC;CAC7B;;AAED,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC;;;;;;;;AAQ1B,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,UAAS,IAAI,EAAE;AACtC,MAAI,IAAI,CAAC,IAAI,EAAE,OAAO;AACtB,MAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;AAC7B,MAAI,UAAU,IAAI,CAAC,EAAE,OAAO;AAC5B,MAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;AAC7B,QAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB,WAAO;GACR;AACD,MAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;AAChF,UAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAC7D,MAAI,CAAC,YAAY,IAAI,MAAM,CAAC;AAC5B,MAAI,MAAM,GAAG,UAAU,EAAE;AACvB,QAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;GACxC;AACD,SAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;AACzE,QAAI,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC;AACzC,QAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,QAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACtB,QAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;GACjD;CACF,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,YAAW;AACtC,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,MAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,MAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,MAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,MAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;AACnC,MAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;AACjC,MAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,MAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC3B,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC;CACpB,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,YAAY,GAAG,UAAS,MAAM,EAAE,OAAO,EAAE;AAC1D,MAAI,MAAM,IAAI,CAAC,EAAE;AACf,WAAO,CAAC,IAAI,CAAC,CAAC;AACd,WAAO;GACR;AACD,MAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,CAAC;AAC3F,MAAI,CAAC,aAAa,GAAG,OAAO,CAAC;AAC7B,MAAI,MAAM,GAAG,MAAM,CAAC;AACpB,SAAO,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7C,QAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AACvC,QAAI,MAAM,GAAG,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AACjF,QAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACjD,YAAQ,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AACnE,QAAI,CAAC,YAAY,IAAI,IAAI,CAAC;AAC1B,UAAM,IAAI,IAAI,CAAC;GAChB;CACF,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,UAAS,MAAM,EAAE,OAAO,EAAE;AACxD,MAAI,MAAM,IAAI,CAAC,EAAE;AACf,WAAO,CAAC,IAAI,CAAC,CAAC;AACd,WAAO;GACR;AACD,MAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;AAClF,MAAI,CAAC,aAAa,GAAG,OAAO,CAAC;AAC7B,MAAI,MAAM,GAAG,MAAM,CAAC;AACpB,SAAO,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7C,QAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AACvC,QAAI,MAAM,GAAG,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AACjF,QAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACjD,YAAQ,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AACnE,QAAI,CAAC,YAAY,IAAI,IAAI,CAAC;AAC1B,UAAM,IAAI,IAAI,CAAC;GAChB;CACF,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAS,MAAM,EAAE,YAAY,EAAE;AACnE,SAAO,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,sBAAsB,CAAA,CAAE,GAAG,CAAC,MAAM,CAAC,CAAC;CAC7F,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,IAAI,EAAE;AACjD,MAAI,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,aAAa,CAAC,EAAE;AACpD,QAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA,IAAK,CAAC,EAAE;AACzB,UAAI,CAAC,KAAK,CAAC,sCAAsC,EAAE,IAAI,CAAC,CAAC;AACzD,aAAO;KACR;GACF,MAAM;AACL,QAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA,IAAK,CAAC,EAAE;AACzB,UAAI,CAAC,KAAK,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC;AAClD,aAAO;KACR;GACF;AACD,MAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA,IAAK,IAAI,CAAC;AACnD,MAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA,IAAK,IAAI,CAAC;AAC7C,MAAI,UAAU,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA,IAAK,IAAI,CAAC;AAC1C,MAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC3B,MAAI,MAAM,KAAK,CAAC,EAAE;AAChB,QAAI,UAAU,EAAE;AACd,UAAI,CAAC,KAAK,CAAC,gEAAgE,EAAE,IAAI,CAAC,CAAC;AACnF,aAAO;KACR;;AAED,QAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;AACtC,QAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC;AACzD,QAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAA,AAAC,EAAE;AACvD,UAAI,CAAC,KAAK,CAAC,iDAAiD,EAAE,IAAI,CAAC,CAAC;AACpE,aAAO;KACR;GACF,MACI;AACH,QAAI,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,yBAAyB,IAAI,IAAI,EAAE;AAC9D,UAAI,CAAC,KAAK,CAAC,6DAA6D,EAAE,IAAI,CAAC,CAAC;AAChF,aAAO;KACR;AACD,QAAI,MAAM,IAAI,CAAC,IAAI,UAAU,EAAE;AAC7B,UAAI,CAAC,KAAK,CAAC,4DAA4D,EAAE,IAAI,CAAC,CAAC;AAC/E,aAAO;KACR;AACD,QAAI,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;AACnC,QAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B,QAAI,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,KAAK,EAAE;AACrC,UAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;AACtC,UAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,MAAM,CAAC;KAC/C,MACI,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC;GAC7C;AACD,MAAI,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACzC,MAAI,OAAO,OAAO,IAAI,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,KAC7F;AACH,WAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;GAChC;CACF,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,SAAS,GAAG,YAAW;AACxC,MAAI,IAAI,CAAC,IAAI,EAAE,OAAO;AACtB,MAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KACxE,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxE,MAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACtB,MAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,MAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,MAAI,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,yBAAyB,EAAE;;AAEzF,QAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,IAAI,CAAC;GAC7C;AACD,MAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;AAC9B,MAAI,CAAC,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC;AAChC,MAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,yBAAyB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,CAAC,CAAC;AAC5G,MAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;AAC1B,MAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;CAC1C,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AACpC,MAAI,IAAI,CAAC,IAAI,EAAE,OAAO;AACtB,MAAI,CAAC,KAAK,GAAG;AACX,6BAAyB,EAAE,IAAI;AAC/B,gBAAY,EAAE,KAAK;AACnB,UAAM,EAAE,KAAK;AACb,UAAM,EAAE,CAAC;AACT,uBAAmB,EAAE,KAAK;GAC3B,CAAC;AACF,MAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACtC,MAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxC,MAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACtB,MAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,MAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,MAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,MAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AACzB,MAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;AAC9B,MAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAC1B,MAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;CAC/B,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE;AACvD,MAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC9D,MAAI,MAAM,EAAE,OAAO,GAAG,CAAC;AACvB,SAAO,GAAG,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;CAChD,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,MAAM,EAAE,iBAAiB,EAAE;AAC9D,MAAI,IAAI,CAAC,IAAI,EAAE,OAAO;AACtB,MAAI,CAAC,KAAK,EAAE,CAAC;AACb,MAAG,OAAO,MAAM,IAAI,QAAQ,EAAC;AAC3B,QAAI,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,iBAAiB,CAAC,CAAC;GACpD,MACI,IAAG,MAAM,CAAC,WAAW,IAAI,KAAK,EAAC;AAClC,QAAI,CAAC,OAAO,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;GACzC,MACG;AACF,QAAI,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,EAAC,iBAAiB,CAAC,CAAC;GAC/D;AACD,SAAO,IAAI,CAAC;CACb,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AACpC,MAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO;;AAEzC,MAAI,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;AAC3C,MAAI,CAAC,OAAO,EAAE,OAAO;;AAErB,MAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,SAAO,CAAC,YAAW;AACjB,QAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAI,CAAC,KAAK,EAAE,CAAC;GACd,CAAC,CAAC;CACJ,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,eAAe,GAAG,UAAS,aAAa,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE;AACtF,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,MAAI,UAAU,EAAE;AACd,QAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,aAAa,EAAE,GAAG,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AACpG,UAAI,IAAI,CAAC,IAAI,EAAE,OAAO;AACtB,UAAI,GAAG,EAAE;AACP,gBAAQ,CAAC,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;AAC/C,eAAO;OACR;AACD,cAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACxB,CAAC,CAAC;GACJ,MAAM;AACL,YAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;GAC/B;CACF,CAAC;;;;;;;AAOF,QAAQ,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAS,MAAM,EAAE;AACvD,MAAI,IAAI,CAAC,UAAU,KAAI,SAAS,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;AACnF,WAAO,KAAK,CAAC;GACd;AACD,MAAI,UAAU,GAAG,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC;AACpD,MAAI,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE;AAChC,QAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC;AACvC,WAAO,KAAK,CAAC;GACd;AACD,MAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC,UAAU,GAAG,QAAQ,EAAE,IAAI,CAAC,CAAC;AACxE,MAAI,CAAC,aAAa,GAAC,EAAE,CAAC;AACtB,MAAI,CAAC,OAAO,EAAE,CAAC;;AAEf,SAAO,IAAI,CAAC;CACb,CAAC;;;;;;AAMF,SAAS,YAAY,CAAC,KAAK,EAAE;AAC3B,SAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAE,CAAC,CAAA,GACf,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC;CACtB;;AAED,SAAS,YAAY,CAAC,KAAK,EAAE;AAC3B,SAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAE,EAAE,CAAA,IACf,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC,IAAE,EAAE,CAAA,AAAC,IAClB,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC,IAAE,CAAC,CAAA,AAAC,GAClB,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC;CACtB;;AAED,SAAS,QAAQ,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE;AACzD,UAAQ,MAAM;AACZ;AAAS,eAAS,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,AAAC,MAAM;AAAA,AAChE,SAAK,EAAE;AAAE,eAAS,CAAC,SAAS,GAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AAAA,AACjD,SAAK,EAAE;AAAE,eAAS,CAAC,SAAS,GAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AAAA,AACjD,SAAK,EAAE;AAAE,eAAS,CAAC,SAAS,GAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AAAA,AACjD,SAAK,EAAE;AAAE,eAAS,CAAC,SAAS,GAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AAAA,AACjD,SAAK,EAAE;AAAE,eAAS,CAAC,SAAS,GAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AAAA,AACjD,SAAK,EAAE;AAAE,eAAS,CAAC,SAAS,GAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AAAA,AACjD,SAAK,EAAE;AAAE,eAAS,CAAC,SAAS,GAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,AAC/C,SAAK,CAAC;AAAE,eAAS,CAAC,SAAS,GAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,AAC9C,SAAK,CAAC;AAAE,eAAS,CAAC,SAAS,GAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,AAC9C,SAAK,CAAC;AAAE,eAAS,CAAC,SAAS,GAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,AAC9C,SAAK,CAAC;AAAE,eAAS,CAAC,SAAS,GAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,AAC9C,SAAK,CAAC;AAAE,eAAS,CAAC,SAAS,GAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,AAC9C,SAAK,CAAC;AAAE,eAAS,CAAC,SAAS,GAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,AAC9C,SAAK,CAAC;AAAE,eAAS,CAAC,SAAS,GAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,AAC9C,SAAK,CAAC;AAAE,eAAS,CAAC,SAAS,GAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,AAC9C,SAAK,CAAC;AAAE,eAAS,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,GAC7C;CACF;;AAED,SAAS,KAAK,CAAC,GAAG,EAAE;AAClB,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,OAAK,IAAI,CAAC,IAAI,GAAG,EAAE;AACjB,QAAI,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;AACzB,YAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;KACpB;GACF;AACD,SAAO,MAAM,CAAC;CACf;;;;;;AAMD,IAAI,OAAO,GAAG;;AAEZ,KAAG,EAAE;AACH,SAAK,EAAE,eAAS,IAAI,EAAE;AACpB,UAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,UAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACjC,UAAI,WAAW,GAAG,GAAG,EAAE;AACrB,YAAI,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAC;AACvC,cAAI,CAAC,KAAK,CAAC,iEAAiE,EAAE,IAAI,CAAC,CAAC;AACpF,iBAAO;SACR;AACD,eAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;OAC9C,MACI,IAAI,WAAW,IAAI,GAAG,EAAE;AAC3B,YAAI,CAAC,YAAY,CAAC,CAAC,EAAE,UAAS,IAAI,EAAE;AAClC,cAAI,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACxC,cAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAC;AAClC,gBAAI,CAAC,KAAK,CAAC,iEAAiE,EAAE,IAAI,CAAC,CAAC;AACpF,mBAAO;WACR;AACD,iBAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACzC,CAAC,CAAC;OACJ,MACI,IAAI,WAAW,IAAI,GAAG,EAAE;AAC3B,YAAI,CAAC,YAAY,CAAC,CAAC,EAAE,UAAS,IAAI,EAAE;AAClC,cAAI,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE;AACnC,gBAAI,CAAC,KAAK,CAAC,0EAA0E,EAAE,IAAI,CAAC,CAAC;AAC7F,mBAAO;WACR;AACD,cAAI,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACxC,cAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAC;AAClC,gBAAI,CAAC,KAAK,CAAC,iEAAiE,EAAE,IAAI,CAAC,CAAC;AACpF,mBAAO;WACR;AACD,iBAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;SAC7D,CAAC,CAAC;OACJ;KACF;AACD,WAAO,EAAE,iBAAS,MAAM,EAAE;AACxB,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACrB,YAAI,CAAC,YAAY,CAAC,CAAC,EAAE,UAAS,IAAI,EAAE;AAClC,cAAI,IAAI,GAAG,IAAI,CAAC;AAChB,cAAI,CAAC,UAAU,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,mBAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;WAC5C,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ,MACI;AACH,YAAI,CAAC,UAAU,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,iBAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAC5C,CAAC,CAAC;OACJ;KACF;AACD,UAAM,EAAE,gBAAS,IAAI,EAAE,IAAI,EAAE;AAC3B,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5D,UAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,UAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAS,QAAQ,EAAE;AAC3C,YAAI,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,UAAU,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AACvF,cAAI,GAAG,EAAE;AACP,gBAAG,GAAG,CAAC,IAAI,KAAG,IAAI,EAAC;AACf,qBAAO,IAAI,CAAC,KAAK,CAAC,iEAAiE,EAAE,IAAI,CAAC,CAAC;aAC9F;AACD,mBAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;WACtC;AACD,cAAI,MAAM,IAAI,IAAI,EAAE;AAClB,gBAAI,IAAI,CAAC,UAAU,IAAE,CAAC,IAAK,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,AAAC,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,MAAM,GAAI,IAAI,CAAC,UAAU,AAAC,EAAE;AAChH,kBAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC,MACG;AACA,kBAAI,CAAC,cAAc,GAAC,IAAI,CAAC;AACzB,kBAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AACzB,kBAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;AAC9B,kBAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,wCAAwC,GAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;AACtF,qBAAO;aACV;AACD,gBAAI,CAAC,oBAAoB,IAAI,MAAM,CAAC,MAAM,CAAC;WAC5C;AACD,cAAI,KAAK,CAAC,YAAY,EAAE;AACtB,gBAAI,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACvD,gBAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AACzB,gBAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;AAC9B,gBAAI,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE;AAC1C,kBAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;AAC1C,qBAAO;aACR;AACD,gBAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAC,CAAC,CAAC;WAC5F;AACD,kBAAQ,EAAE,CAAC;SACZ,CAAC,CAAC;OACJ,CAAC,CAAC;AACH,UAAI,CAAC,KAAK,EAAE,CAAC;AACb,UAAI,CAAC,SAAS,EAAE,CAAC;KAClB;GACF;;AAED,KAAG,EAAE;AACH,SAAK,EAAE,eAAS,IAAI,EAAE;AACpB,UAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,UAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACjC,UAAI,WAAW,GAAG,GAAG,EAAE;AACnB,YAAI,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAC;AACvC,cAAI,CAAC,KAAK,CAAC,8DAA8D,EAAE,IAAI,CAAC,CAAC;AACjF,iBAAO;SACR;AACH,eAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;OAC9C,MACI,IAAI,WAAW,IAAI,GAAG,EAAE;AAC3B,YAAI,CAAC,YAAY,CAAC,CAAC,EAAE,UAAS,IAAI,EAAE;AAClC,cAAI,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACxC,cAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAC;AAClC,gBAAI,CAAC,KAAK,CAAC,8DAA8D,EAAE,IAAI,CAAC,CAAC;AACjF,mBAAO;WACR;AACD,iBAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACzC,CAAC,CAAC;OACJ,MACI,IAAI,WAAW,IAAI,GAAG,EAAE;AAC3B,YAAI,CAAC,YAAY,CAAC,CAAC,EAAE,UAAS,IAAI,EAAE;AAClC,cAAI,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE;AACnC,gBAAI,CAAC,KAAK,CAAC,0EAA0E,EAAE,IAAI,CAAC,CAAC;AAC7F,mBAAO;WACR;AACD,cAAI,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC9C,cAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAC;AAClC,gBAAI,CAAC,KAAK,CAAC,8DAA8D,EAAE,IAAI,CAAC,CAAC;AACjF,mBAAO;WACR;AACD,iBAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACzC,CAAC,CAAC;OACJ;KACF;AACD,WAAO,EAAE,iBAAS,MAAM,EAAE;AACxB,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACrB,YAAI,CAAC,YAAY,CAAC,CAAC,EAAE,UAAS,IAAI,EAAE;AAClC,cAAI,IAAI,GAAG,IAAI,CAAC;AAChB,cAAI,CAAC,UAAU,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,mBAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;WAC5C,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ,MACI;AACH,YAAI,CAAC,UAAU,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,iBAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAC5C,CAAC,CAAC;OACJ;KACF;AACD,UAAM,EAAE,gBAAS,IAAI,EAAE,IAAI,EAAE;AAC3B,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5D,UAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,UAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAS,QAAQ,EAAE;AAC3C,YAAI,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,UAAU,EAAE,UAAS,GAAG,EAAE,MAAM,EAAE;AACvF,cAAI,GAAG,EAAE;AACP,gBAAG,GAAG,CAAC,IAAI,KAAG,IAAI,EAAC;AACf,qBAAO,IAAI,CAAC,KAAK,CAAC,gEAAgE,EAAE,IAAI,CAAC,CAAC;aAC7F;AACD,mBAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;WACtC;AACD,cAAI,MAAM,IAAI,IAAI,EAAE;AAClB,gBAAI,IAAI,CAAC,UAAU,IAAE,CAAC,IAAK,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,AAAC,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,MAAM,GAAI,IAAI,CAAC,UAAU,AAAC,EAAE;AAChH,kBAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC,MACG;AACA,kBAAI,CAAC,cAAc,GAAC,IAAI,CAAC;AACzB,kBAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AACzB,kBAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;AAC9B,kBAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,0BAA0B,CAAC,EAAE,IAAI,CAAC,CAAC;AACxD,qBAAO;aACV;AACD,gBAAI,CAAC,oBAAoB,IAAI,MAAM,CAAC,MAAM,CAAC;WAC5C;AACD,cAAI,KAAK,CAAC,YAAY,EAAE;AACtB,gBAAI,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACvD,gBAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AACzB,gBAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;AAC9B,gBAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAC,CAAC,CAAC;WAC7E;AACD,kBAAQ,EAAE,CAAC;SACZ,CAAC,CAAC;OACJ,CAAC,CAAC;AACH,UAAI,CAAC,KAAK,EAAE,CAAC;AACb,UAAI,CAAC,SAAS,EAAE,CAAC;KAClB;GACF;;AAED,KAAG,EAAE;AACH,SAAK,EAAE,eAAS,IAAI,EAAE;AACpB,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,KAAK,EAAE;AACpC,YAAI,CAAC,KAAK,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC;AACtD,eAAO;OACR;;;AAGD,UAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACjC,UAAI,WAAW,GAAG,GAAG,EAAE;AACrB,eAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;OAC9C,MACI;AACH,YAAI,CAAC,KAAK,CAAC,wDAAwD,EAAE,IAAI,CAAC,CAAC;OAC5E;KACF;AACD,WAAO,EAAE,iBAAS,MAAM,EAAE;AACxB,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACrB,YAAI,CAAC,YAAY,CAAC,CAAC,EAAE,UAAS,IAAI,EAAE;AAClC,cAAI,IAAI,GAAG,IAAI,CAAC;AAChB,cAAI,CAAC,UAAU,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,mBAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;WAC5C,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ,MACI;AACH,YAAI,CAAC,UAAU,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,iBAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAC5C,CAAC,CAAC;OACJ;KACF;AACD,UAAM,EAAE,gBAAS,IAAI,EAAE,IAAI,EAAE;AAC3B,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;;AAErC,UAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,UAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAW;AACnC,YAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;AAC5B,cAAI,CAAC,KAAK,CAAC,yDAAyD,EAAE,IAAI,CAAC,CAAC;AAC5E,iBAAO;SACR;AACD,YAAI,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;AACvE,YAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;AACtC,cAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;AACvC,iBAAO;SACR;AACD,YAAI,OAAO,GAAG,EAAE,CAAC;AACjB,YAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AAC3B,cAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAClC,cAAI,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE;AAC1C,gBAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;AAC1C,mBAAO;WACR;AACD,iBAAO,GAAG,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAC1C;AACD,YAAI,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAC,CAAC,CAAC;AACpD,YAAI,CAAC,KAAK,EAAE,CAAC;OACd,CAAC,CAAC;AACH,UAAI,CAAC,KAAK,EAAE,CAAC;KACd;GACF;;AAED,KAAG,EAAE;AACH,SAAK,EAAE,eAAS,IAAI,EAAE;AACpB,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,KAAK,EAAE;AACpC,YAAI,CAAC,KAAK,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;AACrD,eAAO;OACR;;;AAGD,UAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACjC,UAAI,WAAW,GAAG,GAAG,EAAE;AACrB,eAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;OAC9C,MACI;AACH,YAAI,CAAC,KAAK,CAAC,wDAAwD,EAAE,IAAI,CAAC,CAAC;OAC5E;KACF;AACD,WAAO,EAAE,iBAAS,MAAM,EAAE;AACxB,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACrB,YAAI,CAAC,YAAY,CAAC,CAAC,EAAE,UAAS,IAAI,EAAE;AAClC,cAAI,IAAI,GAAG,IAAI,CAAC;AAChB,cAAI,CAAC,UAAU,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,mBAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;WAC5C,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ,MACI;AACH,YAAI,CAAC,UAAU,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,iBAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAC5C,CAAC,CAAC;OACJ;KACF;AACD,UAAM,EAAE,gBAAS,IAAI,EAAE,IAAI,EAAE;AAC3B,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACrC,UAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,UAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAS,QAAQ,EAAE;AAC3C,YAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;AACxD,gBAAQ,EAAE,CAAC;OACZ,CAAC,CAAC;AACH,UAAI,CAAC,KAAK,EAAE,CAAC;AACb,UAAI,CAAC,SAAS,EAAE,CAAC;KAClB;GACF;;AAED,MAAI,EAAE;AACJ,SAAK,EAAE,eAAS,IAAI,EAAE;AACpB,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,KAAK,EAAE;AACpC,YAAI,CAAC,KAAK,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;AACrD,eAAO;OACR;;;AAGD,UAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACjC,UAAI,WAAW,GAAG,GAAG,EAAE;AACrB,eAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;OAC/C,MACI;AACH,YAAI,CAAC,KAAK,CAAC,wDAAwD,EAAE,IAAI,CAAC,CAAC;OAC5E;KACF;AACD,WAAO,EAAE,iBAAS,MAAM,EAAE;AACxB,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACrB,YAAI,CAAC,YAAY,CAAC,CAAC,EAAE,UAAS,IAAI,EAAE;AAClC,cAAI,IAAI,GAAG,IAAI,CAAC;AAChB,cAAI,CAAC,UAAU,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,mBAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;WAC7C,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ,MACI;AACH,YAAI,CAAC,UAAU,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACrC,iBAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7C,CAAC,CAAC;OACJ;KACF;AACD,UAAM,EAAE,gBAAS,IAAI,EAAE,IAAI,EAAE;AAC3B,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACrC,UAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,UAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAS,QAAQ,EAAE;AAC3C,YAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;AACxD,gBAAQ,EAAE,CAAC;OACZ,CAAC,CAAC;AACH,UAAI,CAAC,KAAK,EAAE,CAAC;AACb,UAAI,CAAC,SAAS,EAAE,CAAC;KAClB;GACF;CACF,CAAA","file":"Receiver-compiled.js","sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util')\n  , Validation = require('./Validation').Validation\n  , ErrorCodes = require('./ErrorCodes')\n  , BufferPool = require('./BufferPool')\n  , bufferUtil = require('./BufferUtil').BufferUtil\n  , PerMessageDeflate = require('./PerMessageDeflate');\n\n/**\n * HyBi Receiver implementation\n */\n\nfunction Receiver (extensions,maxPayload) {\n  if (this instanceof Receiver === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n  if(typeof extensions==='number'){\n    maxPayload=extensions;\n    extensions={};\n  }\n\n\n  // memory pool for fragmented messages\n  var fragmentedPoolPrevUsed = -1;\n  this.fragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return fragmentedPoolPrevUsed = fragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((fragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n\n  // memory pool for unfragmented messages\n  var unfragmentedPoolPrevUsed = -1;\n  this.unfragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return unfragmentedPoolPrevUsed = unfragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((unfragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n  this.extensions = extensions || {};\n  this.maxPayload = maxPayload || 0;\n  this.currentPayloadLength = 0;\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.overflow = [];\n  this.headerBuffer = new Buffer(10);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.currentMessage = [];\n  this.currentMessageLength = 0;\n  this.messageHandlers = [];\n  this.expectHeader(2, this.processPacket);\n  this.dead = false;\n  this.processing = false;\n\n  this.onerror = function() {};\n  this.ontext = function() {};\n  this.onbinary = function() {};\n  this.onclose = function() {};\n  this.onping = function() {};\n  this.onpong = function() {};\n}\n\nmodule.exports = Receiver;\n\n/**\n * Add new data to the parser.\n *\n * @api public\n */\n\nReceiver.prototype.add = function(data) {\n  if (this.dead) return;\n  var dataLength = data.length;\n  if (dataLength == 0) return;\n  if (this.expectBuffer == null) {\n    this.overflow.push(data);\n    return;\n  }\n  var toRead = Math.min(dataLength, this.expectBuffer.length - this.expectOffset);\n  fastCopy(toRead, data, this.expectBuffer, this.expectOffset);\n  this.expectOffset += toRead;\n  if (toRead < dataLength) {\n    this.overflow.push(data.slice(toRead));\n  }\n  while (this.expectBuffer && this.expectOffset == this.expectBuffer.length) {\n    var bufferForHandler = this.expectBuffer;\n    this.expectBuffer = null;\n    this.expectOffset = 0;\n    this.expectHandler.call(this, bufferForHandler);\n  }\n};\n\n/**\n * Releases all resources used by the receiver.\n *\n * @api public\n */\n\nReceiver.prototype.cleanup = function() {\n  this.dead = true;\n  this.overflow = null;\n  this.headerBuffer = null;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.unfragmentedBufferPool = null;\n  this.fragmentedBufferPool = null;\n  this.state = null;\n  this.currentMessage = null;\n  this.onerror = null;\n  this.ontext = null;\n  this.onbinary = null;\n  this.onclose = null;\n  this.onping = null;\n  this.onpong = null;\n};\n\n/**\n * Waits for a certain amount of header bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectHeader = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.headerBuffer.slice(this.expectOffset, this.expectOffset + length);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Waits for a certain amount of data bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectData = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.allocateFromPool(length, this.state.fragmentedOperation);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Allocates memory from the buffer pool.\n *\n * @api private\n */\n\nReceiver.prototype.allocateFromPool = function(length, isFragmented) {\n  return (isFragmented ? this.fragmentedBufferPool : this.unfragmentedBufferPool).get(length);\n};\n\n/**\n * Start processing a new packet.\n *\n * @api private\n */\n\nReceiver.prototype.processPacket = function (data) {\n  if (this.extensions[PerMessageDeflate.extensionName]) {\n    if ((data[0] & 0x30) != 0) {\n      this.error('reserved fields (2, 3) must be empty', 1002);\n      return;\n    }\n  } else {\n    if ((data[0] & 0x70) != 0) {\n      this.error('reserved fields must be empty', 1002);\n      return;\n    }\n  }\n  this.state.lastFragment = (data[0] & 0x80) == 0x80;\n  this.state.masked = (data[1] & 0x80) == 0x80;\n  var compressed = (data[0] & 0x40) == 0x40;\n  var opcode = data[0] & 0xf;\n  if (opcode === 0) {\n    if (compressed) {\n      this.error('continuation frame cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    // continuation frame\n    this.state.fragmentedOperation = true;\n    this.state.opcode = this.state.activeFragmentedOperation;\n    if (!(this.state.opcode == 1 || this.state.opcode == 2)) {\n      this.error('continuation frame cannot follow current opcode', 1002);\n      return;\n    }\n  }\n  else {\n    if (opcode < 3 && this.state.activeFragmentedOperation != null) {\n      this.error('data frames after the initial data frame must have opcode 0', 1002);\n      return;\n    }\n    if (opcode >= 8 && compressed) {\n      this.error('control frames cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    this.state.compressed = compressed;\n    this.state.opcode = opcode;\n    if (this.state.lastFragment === false) {\n      this.state.fragmentedOperation = true;\n      this.state.activeFragmentedOperation = opcode;\n    }\n    else this.state.fragmentedOperation = false;\n  }\n  var handler = opcodes[this.state.opcode];\n  if (typeof handler == 'undefined') this.error('no handler for opcode ' + this.state.opcode, 1002);\n  else {\n    handler.start.call(this, data);\n  }\n};\n\n/**\n * Endprocessing a packet.\n *\n * @api private\n */\n\nReceiver.prototype.endPacket = function() {\n  if (this.dead) return;\n  if (!this.state.fragmentedOperation) this.unfragmentedBufferPool.reset(true);\n  else if (this.state.lastFragment) this.fragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  if (this.state.lastFragment && this.state.opcode === this.state.activeFragmentedOperation) {\n    // end current fragmented operation\n    this.state.activeFragmentedOperation = null;\n  }\n  this.currentPayloadLength = 0;\n  this.state.lastFragment = false;\n  this.state.opcode = this.state.activeFragmentedOperation != null ? this.state.activeFragmentedOperation : 0;\n  this.state.masked = false;\n  this.expectHeader(2, this.processPacket);\n};\n\n/**\n * Reset the parser state.\n *\n * @api private\n */\n\nReceiver.prototype.reset = function() {\n  if (this.dead) return;\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.fragmentedBufferPool.reset(true);\n  this.unfragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.overflow = [];\n  this.currentMessage = [];\n  this.currentMessageLength = 0;\n  this.messageHandlers = [];\n  this.currentPayloadLength = 0;\n};\n\n/**\n * Unmask received data.\n *\n * @api private\n */\n\nReceiver.prototype.unmask = function (mask, buf, binary) {\n  if (mask != null && buf != null) bufferUtil.unmask(buf, mask);\n  if (binary) return buf;\n  return buf != null ? buf.toString('utf8') : '';\n};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nReceiver.prototype.error = function (reason, protocolErrorCode) {\n  if (this.dead) return;\n  this.reset();\n  if(typeof reason == 'string'){\n    this.onerror(new Error(reason), protocolErrorCode);\n  }\n  else if(reason.constructor == Error){\n    this.onerror(reason, protocolErrorCode);\n  }\n  else{\n    this.onerror(new Error(\"An error occured\"),protocolErrorCode);\n  }\n  return this;\n};\n\n/**\n * Execute message handler buffers\n *\n * @api private\n */\n\nReceiver.prototype.flush = function() {\n  if (this.processing || this.dead) return;\n\n  var handler = this.messageHandlers.shift();\n  if (!handler) return;\n\n  this.processing = true;\n  var self = this;\n\n  handler(function() {\n    self.processing = false;\n    self.flush();\n  });\n};\n\n/**\n * Apply extensions to message\n *\n * @api private\n */\n\nReceiver.prototype.applyExtensions = function(messageBuffer, fin, compressed, callback) {\n  var self = this;\n  if (compressed) {\n    this.extensions[PerMessageDeflate.extensionName].decompress(messageBuffer, fin, function(err, buffer) {\n      if (self.dead) return;\n      if (err) {\n        callback(new Error('invalid compressed data'));\n        return;\n      }\n      callback(null, buffer);\n    });\n  } else {\n    callback(null, messageBuffer);\n  }\n};\n\n/**\n* Checks payload size, disconnects socket when it exceeds maxPayload\n*\n* @api private\n*/\nReceiver.prototype.maxPayloadExceeded = function(length) {\n  if (this.maxPayload=== undefined || this.maxPayload === null || this.maxPayload < 1) {\n    return false;\n  }\n  var fullLength = this.currentPayloadLength + length;\n  if (fullLength < this.maxPayload) {\n    this.currentPayloadLength = fullLength;\n    return false;\n  }\n  this.error('payload cannot exceed ' + this.maxPayload + ' bytes', 1009);\n  this.messageBuffer=[];\n  this.cleanup();\n\n  return true;\n};\n\n/**\n * Buffer utilities\n */\n\nfunction readUInt16BE(start) {\n  return (this[start]<<8) +\n         this[start+1];\n}\n\nfunction readUInt32BE(start) {\n  return (this[start]<<24) +\n         (this[start+1]<<16) +\n         (this[start+2]<<8) +\n         this[start+3];\n}\n\nfunction fastCopy(length, srcBuffer, dstBuffer, dstOffset) {\n  switch (length) {\n    default: srcBuffer.copy(dstBuffer, dstOffset, 0, length); break;\n    case 16: dstBuffer[dstOffset+15] = srcBuffer[15];\n    case 15: dstBuffer[dstOffset+14] = srcBuffer[14];\n    case 14: dstBuffer[dstOffset+13] = srcBuffer[13];\n    case 13: dstBuffer[dstOffset+12] = srcBuffer[12];\n    case 12: dstBuffer[dstOffset+11] = srcBuffer[11];\n    case 11: dstBuffer[dstOffset+10] = srcBuffer[10];\n    case 10: dstBuffer[dstOffset+9] = srcBuffer[9];\n    case 9: dstBuffer[dstOffset+8] = srcBuffer[8];\n    case 8: dstBuffer[dstOffset+7] = srcBuffer[7];\n    case 7: dstBuffer[dstOffset+6] = srcBuffer[6];\n    case 6: dstBuffer[dstOffset+5] = srcBuffer[5];\n    case 5: dstBuffer[dstOffset+4] = srcBuffer[4];\n    case 4: dstBuffer[dstOffset+3] = srcBuffer[3];\n    case 3: dstBuffer[dstOffset+2] = srcBuffer[2];\n    case 2: dstBuffer[dstOffset+1] = srcBuffer[1];\n    case 1: dstBuffer[dstOffset] = srcBuffer[0];\n  }\n}\n\nfunction clone(obj) {\n  var cloned = {};\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      cloned[k] = obj[k];\n    }\n  }\n  return cloned;\n}\n\n/**\n * Opcode handlers\n */\n\nvar opcodes = {\n  // text\n  '1': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        if (self.maxPayloadExceeded(firstLength)){\n          self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n          return;\n        }\n        opcodes['1'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          var length = readUInt16BE.call(data, 0);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['1'].getData.call(self, length);\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          var length = readUInt32BE.call(data, 4);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['1'].getData.call(self, readUInt32BE.call(data, 4));\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['1'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['1'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) {\n            if(err.type===1009){\n                return self.error('Maximumpayload exceeded in compressed text message. Aborting...', 1009);\n            }\n            return self.error(err.message, 1007);\n          }\n          if (buffer != null) {\n            if( self.maxPayload==0 || (self.maxPayload > 0 && (self.currentMessageLength + buffer.length) < self.maxPayload) ){\n              self.currentMessage.push(buffer);\n            }\n            else{\n                self.currentMessage=null;\n                self.currentMessage = [];\n                self.currentMessageLength = 0;\n                self.error(new Error('Maximum payload exceeded. maxPayload: '+self.maxPayload), 1009);\n                return;\n            }\n            self.currentMessageLength += buffer.length;\n          }\n          if (state.lastFragment) {\n            var messageBuffer = Buffer.concat(self.currentMessage);\n            self.currentMessage = [];\n            self.currentMessageLength = 0;\n            if (!Validation.isValidUTF8(messageBuffer)) {\n              self.error('invalid utf8 sequence', 1007);\n              return;\n            }\n            self.ontext(messageBuffer.toString('utf8'), {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // binary\n  '2': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n          if (self.maxPayloadExceeded(firstLength)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n        opcodes['2'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          var length = readUInt16BE.call(data, 0);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['2'].getData.call(self, length);\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          var length = readUInt32BE.call(data, 4, true);\n          if (self.maxPayloadExceeded(length)){\n            self.error('Max payload exceeded in compressed text message. Aborting...', 1009);\n            return;\n          }\n          opcodes['2'].getData.call(self, length);\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['2'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['2'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) {\n            if(err.type===1009){\n                return self.error('Max payload exceeded in compressed binary message. Aborting...', 1009);\n            }\n            return self.error(err.message, 1007);\n          }\n          if (buffer != null) {\n            if( self.maxPayload==0 || (self.maxPayload > 0 && (self.currentMessageLength + buffer.length) < self.maxPayload) ){\n              self.currentMessage.push(buffer);\n            }\n            else{\n                self.currentMessage=null;\n                self.currentMessage = [];\n                self.currentMessageLength = 0;\n                self.error(new Error('Maximum payload exceeded'), 1009);\n                return;\n            }\n            self.currentMessageLength += buffer.length;\n          }\n          if (state.lastFragment) {\n            var messageBuffer = Buffer.concat(self.currentMessage);\n            self.currentMessage = [];\n            self.currentMessageLength = 0;\n            self.onbinary(messageBuffer, {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // close\n  '8': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented close is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['8'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['8'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['8'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n\n      var state = clone(this.state);\n      this.messageHandlers.push(function() {\n        if (data && data.length == 1) {\n          self.error('close packets with data must be at least two bytes long', 1002);\n          return;\n        }\n        var code = data && data.length > 1 ? readUInt16BE.call(data, 0) : 1000;\n        if (!ErrorCodes.isValidErrorCode(code)) {\n          self.error('invalid error code', 1002);\n          return;\n        }\n        var message = '';\n        if (data && data.length > 2) {\n          var messageBuffer = data.slice(2);\n          if (!Validation.isValidUTF8(messageBuffer)) {\n            self.error('invalid utf8 sequence', 1007);\n            return;\n          }\n          message = messageBuffer.toString('utf8');\n        }\n        self.onclose(code, message, {masked: state.masked});\n        self.reset();\n      });\n      this.flush();\n    },\n  },\n  // ping\n  '9': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented ping is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['9'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['9'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['9'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = this.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onping(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // pong\n  '10': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented pong is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['10'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (this.state.masked) {\n        this.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['10'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        this.expectData(length, function(data) {\n          opcodes['10'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onpong(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  }\n}\n"]}