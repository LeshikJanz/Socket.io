{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  } else if (opts && 'object' === typeof opts.query) {\n    opts.query = encodeQueryString(opts.query);\n  }\n  return io.socket(parsed.path, opts);\n}\n/**\n *  Helper method to parse query objects to string.\n * @param {object} query\n * @returns {string}\n */\nfunction encodeQueryString (obj) {\n  var str = [];\n  for (var p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  }\n  return str.join('&');\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n"]}