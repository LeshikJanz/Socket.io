{"version":3,"sources":["url.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,sBAAsB,CAAC,CAAC;;;;;;AAMrD,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;;;;;;;;;;;AAWrB,SAAS,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE;AACtB,MAAI,GAAG,GAAG,GAAG,CAAC;;;AAGd,KAAG,GAAG,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC;AAC7B,MAAI,IAAI,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;;;AAGtD,MAAI,QAAQ,KAAK,OAAO,GAAG,EAAE;AAC3B,QAAI,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;AACzB,UAAI,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;AACzB,WAAG,GAAG,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC;OAC1B,MAAM;AACL,WAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;OACtB;KACF;;AAED,QAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACpC,WAAK,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;AACnC,UAAI,WAAW,KAAK,OAAO,GAAG,EAAE;AAC9B,WAAG,GAAG,GAAG,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC;OACjC,MAAM;AACL,WAAG,GAAG,UAAU,GAAG,GAAG,CAAC;OACxB;KACF;;;AAGD,SAAK,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;AACvB,OAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;GACrB;;;AAGD,MAAI,CAAC,GAAG,CAAC,IAAI,EAAE;AACb,QAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AACpC,SAAG,CAAC,IAAI,GAAG,IAAI,CAAC;KACjB,MAAM,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AAC5C,SAAG,CAAC,IAAI,GAAG,KAAK,CAAC;KAClB;GACF;;AAED,KAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC;;AAE3B,MAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AACxC,MAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;;;AAGlD,KAAG,CAAC,EAAE,GAAG,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;;AAEtD,KAAG,CAAC,IAAI,GAAG,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,EAAE,GAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,AAAC,CAAC;;AAEhG,SAAO,GAAG,CAAC;CACZ","file":"url-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n"]}