{"version":3,"sources":["polling-jsonp.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACnC,IAAI,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAChC,IAAI,cAAc,GAAG,QAAQ,CAAC;AAC9B,IAAI,QAAQ,GAAG,WAAW,CAAC;;;;;;AAM3B,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;;;;;;;;AAQvB,SAAS,KAAK,CAAE,GAAG,EAAE;AACnB,SAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;;AAExB,MAAI,CAAC,IAAI,GAAG,SAAS,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAA,CAAE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC;AAC3E,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC;CAClB,CAAC;;;;;;AAMF,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;;;;;;;;;AAS9C,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,IAAI,EAAE;;;AAGvC,MAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxB,MAAI,QAAQ,IAAI,OAAO,IAAI,EAAE;;;AAG3B,QAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAS,KAAK,EAAE,OAAO,EAAE;AACrD,aAAO,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC;KAC/B,CAAC,CAAC;AACH,WAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;GAC1E;CACF,CAAC;;;;;;;;AAQF,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE;;;AAG3D,MAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAC1B,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAC7B,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;;;AAGjC,MAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;;AAElC,SAAO,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;CAC/D,CAAC","file":"polling-jsonp-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Polling = require('./polling');\nvar qs = require('querystring');\nvar rDoubleSlashes = /\\\\\\\\n/g;\nvar rSlashes = /(\\\\)?\\\\n/g;\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONP;\n\n/**\n * JSON-P polling transport.\n *\n * @api public\n */\n\nfunction JSONP (req) {\n  Polling.call(this, req);\n\n  this.head = '___eio[' + (req._query.j || '').replace(/[^0-9]/g, '') + '](';\n  this.foot = ');';\n};\n\n/**\n * Inherits from Polling.\n */\n\nJSONP.prototype.__proto__ = Polling.prototype;\n\n/**\n * Handles incoming data.\n * Due to a bug in \\n handling by browsers, we expect a escaped string.\n *\n * @api private\n */\n\nJSONP.prototype.onData = function (data) {\n  // we leverage the qs module so that we get built-in DoS protection\n  // and the fast alternative to decodeURIComponent\n  data = qs.parse(data).d;\n  if ('string' == typeof data) {\n    //client will send already escaped newlines as \\\\\\\\n and newlines as \\\\n\n    // \\\\n must be replaced with \\n and \\\\\\\\n with \\\\n\n    data = data.replace(rSlashes, function(match, slashes) {\n      return slashes ? match : '\\n';\n    });\n    Polling.prototype.onData.call(this, data.replace(rDoubleSlashes, '\\\\n'));\n  }\n};\n\n/**\n * Performs the write.\n *\n * @api private\n */\n\nJSONP.prototype.doWrite = function (data, options, callback) {\n  // we must output valid javascript, not valid json\n  // see: http://timelessrepo.com/json-isnt-a-javascript-subset\n  var js = JSON.stringify(data)\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029');\n\n  // prepare response\n  data = this.head + js + this.foot;\n\n  Polling.prototype.doWrite.call(this, data, options, callback);\n};\n"]}