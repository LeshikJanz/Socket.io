{"version":3,"sources":["mediaType.js"],"names":[],"mappings":"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","file":"mediaType-compiled.js","sourcesContent":["/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0, index);\n    val = str.substr(index + 1);\n  }\n\n  return [key, val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += ',' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n"]}